// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using NetCoreDataAnnotation.Models;
using System;

namespace NetCoreDataAnnotation.Migrations
{
    [DbContext(typeof(SampleDBContext))]
    [Migration("20180508151859_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NetCoreDataAnnotation.Models.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Brand");

                    b.Property<string>("Model")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Car");
                });

            modelBuilder.Entity("NetCoreDataAnnotation.Models.Hotel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Hotel");
                });

            modelBuilder.Entity("NetCoreDataAnnotation.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.Property<int?>("PlaceId");

                    b.Property<int?>("TripManagerId");

                    b.HasKey("Id");

                    b.HasIndex("PlaceId");

                    b.HasIndex("TripManagerId");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("NetCoreDataAnnotation.Models.Place", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Location");

                    b.HasKey("Id");

                    b.ToTable("Place");
                });

            modelBuilder.Entity("NetCoreDataAnnotation.Models.TripManager", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CarID");

                    b.Property<DateTime>("CheckInDate");

                    b.Property<DateTime>("CheckOutDate");

                    b.Property<int>("HotelID");

                    b.Property<double>("Price")
                        .HasColumnName("TodaysPrice");

                    b.Property<int?>("ResponsableId");

                    b.HasKey("Id");

                    b.HasIndex("CarID");

                    b.HasIndex("HotelID");

                    b.HasIndex("ResponsableId");

                    b.ToTable("TripManager");
                });

            modelBuilder.Entity("NetCoreDataAnnotation.Models.Person", b =>
                {
                    b.HasOne("NetCoreDataAnnotation.Models.Place")
                        .WithMany("Tourists")
                        .HasForeignKey("PlaceId");

                    b.HasOne("NetCoreDataAnnotation.Models.TripManager")
                        .WithMany("Hosts")
                        .HasForeignKey("TripManagerId");
                });

            modelBuilder.Entity("NetCoreDataAnnotation.Models.TripManager", b =>
                {
                    b.HasOne("NetCoreDataAnnotation.Models.Car", "Car")
                        .WithMany()
                        .HasForeignKey("CarID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("NetCoreDataAnnotation.Models.Hotel", "Hotel")
                        .WithMany()
                        .HasForeignKey("HotelID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("NetCoreDataAnnotation.Models.Person", "Responsable")
                        .WithMany()
                        .HasForeignKey("ResponsableId");
                });
#pragma warning restore 612, 618
        }
    }
}
